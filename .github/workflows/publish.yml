name: Publish
concurrency:
  group: ${{ github.workflow }}-${{ inputs.ref || github.event.pull_request.head.ref || github.ref }}
  cancel-in-progress: true
permissions: write-all
defaults:
  run:
    shell: bash
on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: "Are you sure you want to deploy & publish packages?"
        required: true
        default: "no"
        type: choice
        options:
          - "no"
          - "yes"
  push:
    branches:
      - master
      - release/v*
env:
  DOCKER_BUILDKIT: 1
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: "true"
  DOTNET_CLI_UI_LANGUAGE: en-US
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: 1
  DOTNET_SVCUTIL_TELEMETRY_OPTOUT: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: "false"
  POWERSHELL_TELEMETRY_OPTOUT: 1
  POWERSHELL_UPDATECHECK_OPTOUT: 1
  NUGET_CERT_REVOCATION_MODE: offline
  MSBUILDDISABLENODEREUSE: 1
jobs:
  publish:
    if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.confirmation == 'yes') }}
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: git checkout / on non-'workflow_call'
        uses: actions/checkout@v3
        with:
          clean: false
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - uses: dotnet/nbgv@master
        id: nbgv
        with:
          setAllVars: true
      - run: echo 'SemVer2=${{ steps.nbgv.outputs.SemVer2 }}'

      - name: Forward env variables & checkout fixes
        id: gh
        run: |
          sha=$(git rev-parse HEAD)
          branch=$(git rev-parse --abbrev-ref HEAD)
          echo -e "\033[38;5;99;5;16msha: $sha\033[0m"
          echo -e "\033[38;5;99;5;16mbranch: $branch\033[0m"
          echo -e "\033[38;5;99;5;16minputs.ref: ${{ inputs.ref }}\033[0m"
          echo "sha=$sha" >> $GITHUB_OUTPUT
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "::add-matcher::./.github/csc.json"

      - name: Verify the public branch name matches version.json
        if: ${{ github.event_name == 'push' && steps.nbgv.outputs.PublicRelease == 'True' && endsWith(github.ref, steps.nbgv.outputs.MajorMinorVersion) != true && steps.gh.outputs.branch != 'master' }}
        run: |
          echo "::error::The branch name ${{ steps.gh.outputs.branch }} does not match version.json: ${{ steps.nbgv.outputs.MajorMinorVersion }}"
          exit 1

      - name: Verify that non-public branch has a prerelease suffix in version.json
        if: ${{ steps.nbgv.outputs.PublicRelease == 'False' && steps.nbgv.outputs.PrereleaseVersionNoLeadingHyphen == '' }}
        run: |
          echo "::error::The non-public branch ${{ steps.gh.outputs.branch }} must have a prerelease suffix in version.json: ${{ steps.nbgv.outputs.MajorMinorVersion }}"
          exit 1

      - name: Verify that master branch has a prerelease suffix in version.json
        if: ${{ steps.gh.outputs.branch == 'master' && steps.nbgv.outputs.PrereleaseVersionNoLeadingHyphen == '' }}
        run: |
          echo "::error::The master branch ${{ steps.gh.outputs.branch }} must have a prerelease suffix in version.json: ${{ steps.nbgv.outputs.MajorMinorVersion }}"
          exit 1

      - name: dotnet test
        id: tests
        run: docker-compose -f docker-compose.tests.yml up --abort-on-container-exit --build --exit-code-from tests --quiet-pull --no-log-prefix --no-color

      - name: docker build & publish
        id: publish
        run: |
            docker build . --target final -t doggy-frictions:${{ steps.nbgv.outputs.SemVer2 }} -t ${{ vars.CONTAINER_REGISTRY }}/doggy-frictions:${{ steps.nbgv.outputs.SemVer2 }} --compress
            echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u starteleport --password-stdin
            docker push ${{ vars.CONTAINER_REGISTRY }}/doggy-frictions:${{ steps.nbgv.outputs.SemVer2 }}

      - name: Create tag
        if: ${{ steps.nbgv.outputs.PublicRelease == 'True' && steps.nbgv.outputs.PrereleaseVersionNoLeadingHyphen == '' }}
        uses: actions/github-script@v6
        with:
          github-token: "${{ secrets.GH_TOKEN }}"
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.nbgv.outputs.SemVer2 }}",
              sha: "${{ steps.gh.outputs.sha }}"
            })
